Before submitting this file, make sure that there are no more TODO
placeholders remaining in the file (and remove this comment too).

Perfect Numbers
---------------

Before submitting this file, make sure that there are no more TODO
placeholders remaining in the file (and remove this comment too).

Q1. Roughly how long did it take your computer to do the search? How many perfect numbers were found and what were they?
A1. 1-2s, 4 perfect number 6 28 496 8128

Q2. Record the timing results for `findPerfects` that you observed into a table.
A2.
Line 127 TIME_OPERATION findPerfects(40000) (size =    40000) completed in    1.280 secs
Line 128 TIME_OPERATION findPerfects(80000) (size =    80000) completed in    6.186 secs
Line 129 TIME_OPERATION findPerfects(160000) (size =   160000) completed in   21.367 secs

Line 127 TIME_OPERATION findPerfects(80000) (size =    80000) completed in    4.601 secs
Line 128 TIME_OPERATION findPerfects(160000) (size =   160000) completed in   26.912 secs
Line 129 TIME_OPERATION findPerfects(320000) (size =   320000) completed in  103.662 secs

Q3. Does it take the same amount of work to compute `isPerfect` on the number 10 as it does on the number 1000? Why or why not? Does it take the same amount of work for `findPerfects` to search the range of numbers from 1-1000 as it does to search the numbers from 1000-2000? Why or why not?
A3. 10和1000工作量不同，1000的约数比10多，计算1000需要从1-1000循环来算
    1-1000 和 1000-2000 工作量也不相同，和上面一样道理，虽然都计算了1000个数字，但是每个数字循环的次数不一样

Q4. Extrapolate from the data you gathered and make a prediction: how long will it take `findPerfects` to reach the fifth perfect number?
A4. TODO

Q5. Do any of the tests still pass even with this broken function? Why or why not?
A5. TODO

Q6. Describe the testing strategy you used for your test cases to confirm `smarterSum` is working correctly.
A6. TODO

Q7. Record your timing results for `findPerfectsSmarter` into a table.
A7. TODO
Line 141 TIME_OPERATION findPerfects(10000) (size =    10000) completed in    0.251 secs
Line 142 TIME_OPERATION findPerfects(20000) (size =    20000) completed in    0.472 secs
Line 143 TIME_OPERATION findPerfects(40000) (size =    40000) completed in    1.292 secs
Line 144 TIME_OPERATION findPerfects(80000) (size =    80000) completed in    6.590 secs
Line 145 TIME_OPERATION findPerfects(160000) (size =   160000) completed in   22.724 secs

Line 149 TIME_OPERATION findPerfectsSmarter(10000) (size =    10000) completed in    0.248 secs
Line 150 TIME_OPERATION findPerfectsSmarter(20000) (size =    20000) completed in    0.454 secs
Line 151 TIME_OPERATION findPerfectsSmarter(40000) (size =    40000) completed in    1.296 secs
Line 152 TIME_OPERATION findPerfectsSmarter(80000) (size =    80000) completed in    4.597 secs
Line 153 TIME_OPERATION findPerfectsSmarter(160000) (size =   160000) completed in   19.921 secs

Q8. Make a prediction: how long will `findPerfectsSmarter` take to reach the fifth perfect number?
A8. TODO

Q9. Explain how you chose your specific test cases and why they lead you to be confident `findNthPerfectEuclid` is working correctly.
A9. 1 2 4 8 测试通过，更大的数字可能放不下了

Soundex
-------

Q10. What is the Soundex code for "Angelou"? What is the code for your own surname?
A10. Angelou -> A240

Q11. Before writing any code, brainstorm your plan of attack and sketch how you might decompose the work into smaller tasks. Briefly describe your decomposition strategy.
A11. TODO

Q12. Think about one or more examples of a class of names that the Soundex system might not work well for. Explain what this class of names is and why the system might incorrectly group them or mis-categorize one of the names.
A12. TODO

Q13. Suppose you are a software engineer working for the U.S. government. You have been tasked with implementing a system that collects names as part of the Census survey and analyzes these names using a phonetic algorithm. Your boss suggests using Soundex and notes that the algorithm is only expected to work for ASCII-encoded strings, since supporting Unicode would require extra work and time. What would your response be and why? What representational harms might result from building a system that exclusively uses Soundex and/or ASCII?
A13. TODO


